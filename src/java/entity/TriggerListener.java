package entity;

/**
 * 项目名称: GizmoBall
 * 创建时间: 2020/11/27
 * 描述信息: A listener that can be triggered by `TriggerGenerator`s.
 *      - `TriggerGenerator`s will call trigger(TriggerGenerator) on TriggerListeners
 *          that have registered themselves with the TriggerGenerator
 *          (via TriggerGenerator.registerTriggerListener(TriggerListener))
 *          when the event that causes the TriggerGenerator to generate triggers happens.$
 *
 * 实例: For example, a flipper(挡板) might implement `TriggerListener` with a `trigger` method that flips the flipper,
 *   and a bumper(保险杠) might implement `TriggerGenerator`, generating triggers whenever a ball hits it.
 *  If the flipper registers itself with the bumper, then the flipper will be triggered and thus will flip
 *   every time a ball hits the bumper.
 *
 * @author <a href="mail to: 10185101124@stu.ecnu.edu.cn" rel="nofollow">周政伟</a>
 * @update [1][2020-11-27 12:47] [周政伟][创建接口类，添加注释]
 */
public interface TriggerListener {
    String rcsId = "202011271247";

    /**
     * Trigger this `TriggerListener`.
     * This method should be called by a `TriggerGenerator`
     *   with which this `TriggerListener` has registered itself
     *   whenever an event that causes the `TriggerGenerator` to generate triggers happens.
     * @param trigger :  the TriggerGenerator that is triggering this TriggerListener.
     *                This parameter allows this TriggerListener differentiate between trigger generated by different TriggerGenerators.
     * In general, TriggerGenerators will want to make calls to this method of the form listener.trigger(this).
     * @require: trigger != null and trigger in this.triggerGenerators
     */
    void trigger(TriggerGenerator trigger);
}
